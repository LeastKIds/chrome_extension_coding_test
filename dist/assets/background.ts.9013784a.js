chrome.runtime.onMessage.addListener(function(o,c,r){if(o.type==="login"){console.log("Login message received");const t=o.data.TOKEN;let e=!1;return fetch("https://api.github.com/user",{headers:{Authorization:`Bearer ${t}`}}).then(a=>a.json()).then(a=>{const s=a.login;chrome.storage.sync.set({USER:s,TOKEN:t},function(){if(chrome.runtime.lastError){e||(r({status:!1,data:{errMessage:chrome.runtime.lastError.message}}),e=!0);return}console.log("Saved user name"),e||(r({status:!0,data:{USER:s}}),e=!0)})}).catch(a=>{e||(r({status:!1,data:{errMessage:a.toString()}}),e=!0)}),!0}else if(o.type==="repo"){let t=!1;return chrome.storage.local.get("USER",e=>{if(e.USER){const a=e.USER,s=o.data.REPO;fetch(`https://api.github.com/repos/${a}/${s}`).then(i=>i.json()).then(i=>{chrome.storage.sync.set({REPO:s},function(){if(chrome.runtime.lastError){t||(r({status:!1,data:{errMessage:chrome.runtime.lastError.message}}),t=!0);return}console.log("Saved repo"),t||(r({status:!0,data:{REPO:s}}),t=!0)})}).catch(i=>{t||(r({status:!1,data:{errMessage:i.toString()}}),t=!0)})}else t||(r({status:!1,data:{errMessage:e}}),t=!0)}),!0}});
